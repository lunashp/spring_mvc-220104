<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 자바 파일에서 사용한 annotation 설정을 여기서도 사용할 수 있도록 해주는 설정 -->
	<annotation-driven />

	<!-- /resources로 시작하는 자원의 요청은 src/main/webapp/resources 디렉토리의 자원을 사용합니다 
		이 설정을 해주면 자원을 사용할 때 캐싱을 합니다. 캐싱 시간도 설정 할 수 있습니다 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Controller에서 forwarding 하는 뷰 이름을 리턴했을 때 실제 출력할 뷰를 결정하기 위해서 앞이나 뒤에 공통된 
		설정을 생성 생략할 수 있고 다른 ViewResolver를 추가할 수도 있음 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- View이름을 가지고 직접 View를 선택할 수 있도록 해주는 ViewResolver -->
	<beans:bean
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>

	<!-- download 라는 뷰 이름이 왔을 때 DownloadView로 출력하도록 해주는 설정 -->
	<beans:bean id="download"
		class="kr.co.lunasoft.view.DownloadView" />

	<!-- Controller에서 excel 이라는 뷰 이름을 리턴했을 때 ExcelView를 출력하도록 하는 설정 -->
	<beans:bean id="excel" class="kr.co.lunasoft.view.ExcelView" />

	<!-- Controller에서 pdf 이라는 뷰 이름을 리턴했을 때 PdfView를 출력하도록 하는 설정 -->
	<beans:bean id="pdf" class="kr.co.lunasoft.view.PdfView" />

	<!-- Controller에서 json 이라는 뷰 이름을 리턴했을 때 JSONView를 출력하도록 하는 설정 -->
	<beans:bean id="json"
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />

	<!-- /exception 요청이 오면 input 이라는 뷰 이름을 리턴하도록 설정 -->
	<view-controller path="/exception" view-name="input" />

	<!-- itemreport 라는 View 이름이 전달된 경우 list라는 데이터를 XML로 출력하는 요청을 처리하는 뷰 설정 -->
	<beans:bean
		class="org.springframework.oxm.jaxb.Jaxb2Marshaller" id="marshaller">
		<beans:property name="classesToBeBound">
			<beans:list>
				<beans:value>
					kr.co.lunasoft.domain.ItemReport
				</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.view.xml.MarshallingView"
		id="itemreport">
		<beans:property name="marshaller" ref="marshaller" />
		<beans:property name="modelKey" value="list" />

	</beans:bean>

	<!-- 어노테이션이 붙은 클래스의 빈을 자동생성해주는 패키지 설정 ,를 하고 다른 패키지를 추가할 수 있음 -->
	<context:component-scan
		base-package="kr.co.lunasoft" />

	<!-- web.xml 파일에서 서블릿 설정은 /*, /, 디렉토리 패턴을 사용하는 경우 확장자가 css나 js 등도 Controller 
		가 처리하려고 하기 때문에 정적 자원의 링크를 Controller가 처리해주지않으면 404에러가 발생합니다 -->
	<!-- Spring의 Controller가 처리하지 못하는 요청은 WAS가 처리하도록 해주는 설정 이 설정은 필수 -->
	<default-servlet-handler />


	<!-- Hibernate 의 트랜잭션 매니저 -->
	<!-- 여기에 작성했는데 에러가 날 때는 servlet-context.xml로 옮기면 되는 경우가 있음 -->
	<beans:bean
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		id="transactionManager">
		<beans:property name="sessionFactory"
			ref="sessionFactory" />
	</beans:bean>


	<!-- annotation을 이용해서 트랜잭션을 사용할 수 있도록 해주는 설정 -->
	<tx:annotation-driven />

	<!-- 메시지 파일 설정 -->
	<beans:bean
		class="org.springframework.context.support.ResourceBundleMessageSource"
		id="messageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>message/label</beans:value>
				<beans:value>message/validation</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 파일 업로드를 위한 bean 설정 -->
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
	id="multipartResolver"></beans:bean>

</beans:beans>
